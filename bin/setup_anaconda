#!/usr/bin/env python3

import os
import sys
import contextlib
import tempfile
import shutil
import urllib.request
import subprocess


@contextlib.contextmanager
def tempdir():
    work_dir = tempfile.mkdtemp()
    try:
        yield work_dir
    finally:
        try:
            shutil.rmtree(work_dir)
        except IOError:
            pass


def execute(cmd):
    ret = subprocess.call(cmd)
    if ret != 0:
        raise RuntimeError()


def setup(python_version):
    assert python_version in (2, 3)
    print("Setting up anaconda for Python {}...".format(python_version))
    url_map = {
        2: 'https://repo.continuum.io/archive/Anaconda2-5.0.1-Linux-x86_64.sh',
        3: 'https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh',
    }

    url = url_map[python_version]
    install_dir = os.path.expanduser('~/anaconda/anaconda{}/'.format(python_version))

    if not os.path.isdir(install_dir):
        with tempdir() as work_dir:
            temp_file = os.path.join(work_dir, 't.sh')

            print("Downloading...")
            urllib.request.urlretrieve(url, temp_file)

            print("Installing...")
            execute([
                '/usr/bin/env', 'bash',
                temp_file,
                '-b',
                '-p', install_dir,
            ])


def main(args):
    if len(args) == 0:
        setup(2)
        setup(3)
    else:
        setup(int(args[0]))


if __name__ == '__main__':
    main(sys.argv[1:])
